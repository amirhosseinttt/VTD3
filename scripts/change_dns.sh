#!/bin/bash

# Script to change DNS settings to Shecan DNS servers (178.22.122.100, 185.51.200.2)
# This script needs to be run with sudo privileges

echo "Changing DNS settings to Shecan DNS servers..."

# Check if script is run as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root (use sudo)"
  exit 1
fi

# Backup the resolv.conf file
echo "Backing up current DNS configuration..."
cp /etc/resolv.conf /etc/resolv.conf.backup.$(date +%Y%m%d%H%M%S)

# Set DNS to Shecan
echo "Setting Shecan DNS servers..."
cat > /etc/resolv.conf << EOF
# Generated by change_dns.sh script
nameserver 178.22.122.100
nameserver 185.51.200.2
EOF

# For systems using systemd-resolved
if systemctl is-active systemd-resolved >/dev/null 2>&1; then
  echo "Configuring systemd-resolved to use Shecan DNS..."
  
  # Create a systemd-resolved configuration file
  cat > /etc/systemd/resolved.conf << EOF
[Resolve]
DNS=178.22.122.100 185.51.200.2
DNSStubListener=yes
EOF
  
  # Restart systemd-resolved
  systemctl restart systemd-resolved
fi

# For systems using NetworkManager
if systemctl is-active NetworkManager >/dev/null 2>&1; then
  echo "Configuring NetworkManager to use Shecan DNS..."
  
  # Get the current active connection
  ACTIVE_CONN=$(nmcli -t -f NAME,TYPE connection show --active | grep ethernet | cut -d':' -f1)
  
  if [ -n "$ACTIVE_CONN" ]; then
    echo "Setting DNS for connection: $ACTIVE_CONN"
    nmcli connection modify "$ACTIVE_CONN" ipv4.dns "178.22.122.100 185.51.200.2"
    nmcli connection down "$ACTIVE_CONN" && nmcli connection up "$ACTIVE_CONN"
  else
    echo "No active ethernet connection found"
  fi
fi

echo "DNS changed to Shecan successfully!"
echo "Primary DNS: 178.22.122.100"
echo "Secondary DNS: 185.51.200.2"

# Test DNS resolution
echo "Testing DNS resolution..."
host google.com

echo "Done!"